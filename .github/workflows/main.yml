# This is a basic workflow to help you get started with Actions

name: Deploy to server

# Controls when the action will run.
on:
  # Triggers the workflow on a push to the main branch
  push:
    branches: [master]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # This workflow assumes that NPM/NodeJS is installed on the target system

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # https://stackoverflow.com/a/61236896
      - name: Tar repository
        run: |
          mkdir ../build
          cp -TR . ../build
          tar -cvf deploy.tar ../build/

      - name: Clean up existing setup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          # take down docker compose
          script: |
            cd ~
            docker-compose -p lthc-app down
            rm -rf ~/LTHC && mkdir ~/LTHC

      - name: Copy repository to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: 'deploy.tar'
          target: '~/LTHC/'

      - name: Setup and start app
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

          # cd into respective directory and start docker
          script: |
            cd ~/LTHC
            tar xf deploy.tar && rm deploy.tar && mv build/* . && rm -rf build/
            docker-compose -p lthc-app up -d
